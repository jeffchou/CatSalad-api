<?php
return array(
    'router' => array(
        'routes' => array(
            'catsalad.rest.user' => array(
                'type' => 'Segment',
                'options' => array(
                    'route' => '/user[/:user_id]',
                    'defaults' => array(
                        'controller' => 'catsalad\\V1\\Rest\\User\\Controller',
                    ),
                ),
            ),
            'catsalad.rest.cat' => array(
                'type' => 'Segment',
                'options' => array(
                    'route' => '/cat[/:cat_id]',
                    'defaults' => array(
                        'controller' => 'catsalad\\V1\\Rest\\Cat\\Controller',
                    ),
                ),
            ),
            'catsalad.rest.weapon' => array(
                'type' => 'Segment',
                'options' => array(
                    'route' => '/weapon[/:weapon_id]',
                    'defaults' => array(
                        'controller' => 'catsalad\\V1\\Rest\\Weapon\\Controller',
                    ),
                ),
            ),
            'catsalad.rest.cat_activity' => array(
                'type' => 'Segment',
                'options' => array(
                    'route' => '/cat/:cat_id/activity[/:activity_id]',
                    'defaults' => array(
                        'controller' => 'catsalad\\V1\\Rest\\Cat_activity\\Controller',
                    ),
                ),
            ),
            'catsalad.rest.toy_device' => array(
                'type' => 'Segment',
                'options' => array(
                    'route' => '/toy_device[/:toy_device_id]',
                    'defaults' => array(
                        'controller' => 'catsalad\\V1\\Rest\\Toy_device\\Controller',
                    ),
                ),
            ),
            'catsalad.rest.social_provider' => array(
                'type' => 'Segment',
                'options' => array(
                    'route' => '/social_provider[/:social_provider_id]',
                    'defaults' => array(
                        'controller' => 'catsalad\\V1\\Rest\\Social_provider\\Controller',
                    ),
                ),
            ),
            'catsalad.rest.boss' => array(
                'type' => 'Segment',
                'options' => array(
                    'route' => '/boss[/:boss_id]',
                    'defaults' => array(
                        'controller' => 'catsalad\\V1\\Rest\\Boss\\Controller',
                    ),
                ),
            ),
            'catsalad.rest.attack_pattern' => array(
                'type' => 'Segment',
                'options' => array(
                    'route' => '/attack_pattern[/:attack_pattern_id]',
                    'defaults' => array(
                        'controller' => 'catsalad\\V1\\Rest\\Attack_pattern\\Controller',
                    ),
                ),
            ),
            'catsalad.rest.attack_type' => array(
                'type' => 'Segment',
                'options' => array(
                    'route' => '/attack_type[/:attack_type_id]',
                    'defaults' => array(
                        'controller' => 'catsalad\\V1\\Rest\\Attack_type\\Controller',
                    ),
                ),
            ),
            'catsalad.rest.battle' => array(
                'type' => 'Segment',
                'options' => array(
                    'route' => '/battle[/:battle_id]',
                    'defaults' => array(
                        'controller' => 'catsalad\\V1\\Rest\\Battle\\Controller',
                    ),
                ),
            ),
            'catsalad.rest.battle_boss' => array(
                'type' => 'Segment',
                'options' => array(
                    'route' => '/battle/:battle_id/boss[/:boss_id]',
                    'defaults' => array(
                        'controller' => 'catsalad\\V1\\Rest\\Battle_boss\\Controller',
                    ),
                ),
            ),
            'catsalad.rest.battle_participant' => array(
                'type' => 'Segment',
                'options' => array(
                    'route' => '/battle/:battle_id/participant[/:participant_id]',
                    'defaults' => array(
                        'controller' => 'catsalad\\V1\\Rest\\Battle_participant\\Controller',
                    ),
                ),
            ),
            'catsalad.rest.battle_activity' => array(
                'type' => 'Segment',
                'options' => array(
                    'route' => '/battle/:battle_id/participant/:participant_id/activity[/:activity_id]',
                    'defaults' => array(
                        'controller' => 'catsalad\\V1\\Rest\\Battle_activity\\Controller',
                    ),
                ),
            ),
            'catsalad.rest.toy_control' => array(
                'type' => 'Segment',
                'options' => array(
                    'route' => '/battle/:battle_id/toy_device/:toy_device_id/control[/:control_id]',
                    'defaults' => array(
                        'controller' => 'catsalad\\V1\\Rest\\Toy_control\\Controller',
                    ),
                ),
            ),
            'catsalad.rest.cat_weapon' => array(
                'type' => 'Segment',
                'options' => array(
                    'route' => '/cat/:cat_id/equipped_weapon[/:equipped_weapon_id]',
                    'defaults' => array(
                        'controller' => 'catsalad\\V1\\Rest\\Cat_weapon\\Controller',
                    ),
                ),
            ),
            'catsalad.rest.toydevice_user' => array(
                'type' => 'Segment',
                'options' => array(
                    'route' => '/toy_device/:toy_device_id/user',
                    'defaults' => array(
                        'controller' => 'catsalad\\V1\\Rest\\Toydevice_user\\Controller',
                    ),
                ),
            ),
            'catsalad.rest.level-table' => array(
                'type' => 'Segment',
                'options' => array(
                    'route' => '/level_table[/:level_table_id]',
                    'defaults' => array(
                        'controller' => 'catsalad\\V1\\Rest\\LevelTable\\Controller',
                    ),
                ),
            ),
            'catsalad.rest.server_time' => array(
                'type' => 'Segment',
                'options' => array(
                    'route' => '/server_time[/:server_time_id]',
                    'defaults' => array(
                        'controller' => 'catsalad\\V1\\Rest\\Server_time\\Controller',
                    ),
                ),
            ),
            'catsalad.rest.attack_pattern_content' => array(
                'type' => 'Segment',
                'options' => array(
                    'route' => '/attack_pattern/:attack_pattern_id/content[/:content_id]',
                    'defaults' => array(
                        'controller' => 'catsalad\\V1\\Rest\\Attack_pattern_content\\Controller',
                    ),
                ),
            ),
        ),
    ),
    'zf-versioning' => array(
        'uri' => array(
            0 => 'catsalad.rest.user',
            1 => 'catsalad.rest.cat',
            2 => 'catsalad.rest.weapon',
            3 => 'catsalad.rest.cat_activity',
            6 => 'catsalad.rest.toy_device',
            7 => 'catsalad.rest.social_provider',
            8 => 'catsalad.rest.boss',
            9 => 'catsalad.rest.attack_pattern',
            10 => 'catsalad.rest.attack_type',
            13 => 'catsalad.rest.battle',
            14 => 'catsalad.rest.battle_boss',
            15 => 'catsalad.rest.battle_participant',
            16 => 'catsalad.rest.battle_activity',
            17 => 'catsalad.rest.toy_control',
            18 => 'catsalad.rest.cat_weapon',
            19 => 'catsalad.rest.toydevice_user',
            20 => 'catsalad.rest.level-table',
            21 => 'catsalad.rest.server_time',
            22 => 'catsalad.rest.attack_pattern_content',
        ),
    ),
    'zf-rest' => array(
        'catsalad\\V1\\Rest\\User\\Controller' => array(
            'listener' => 'catsalad\\V1\\Rest\\User\\UserResource',
            'route_name' => 'catsalad.rest.user',
            'route_identifier_name' => 'user_id',
            'collection_name' => 'user',
            'entity_http_methods' => array(
                0 => 'GET',
                1 => 'PUT',
            ),
            'collection_http_methods' => array(
                0 => 'GET',
                1 => 'POST',
            ),
            'collection_query_whitelist' => array(),
            'page_size' => 25,
            'page_size_param' => 'limit',
            'entity_class' => 'catsalad\\V1\\Rest\\User\\UserEntity',
            'collection_class' => 'catsalad\\V1\\Rest\\User\\UserCollection',
            'service_name' => 'user',
        ),
        'catsalad\\V1\\Rest\\Cat\\Controller' => array(
            'listener' => 'catsalad\\V1\\Rest\\Cat\\CatResource',
            'route_name' => 'catsalad.rest.cat',
            'route_identifier_name' => 'cat_id',
            'collection_name' => 'cat',
            'entity_http_methods' => array(
                0 => 'GET',
                1 => 'PUT',
            ),
            'collection_http_methods' => array(
                0 => 'GET',
            ),
            'collection_query_whitelist' => array(
                0 => 'type',
            ),
            'page_size' => 25,
            'page_size_param' => 'limit',
            'entity_class' => 'catsalad\\V1\\Rest\\Cat\\CatEntity',
            'collection_class' => 'catsalad\\V1\\Rest\\Cat\\CatCollection',
            'service_name' => 'cat',
        ),
        'catsalad\\V1\\Rest\\Weapon\\Controller' => array(
            'listener' => 'catsalad\\V1\\Rest\\Weapon\\WeaponResource',
            'route_name' => 'catsalad.rest.weapon',
            'route_identifier_name' => 'weapon_id',
            'collection_name' => 'weapon',
            'entity_http_methods' => array(
                0 => 'GET',
            ),
            'collection_http_methods' => array(
                0 => 'GET',
            ),
            'collection_query_whitelist' => array(),
            'page_size' => 25,
            'page_size_param' => 'limit',
            'entity_class' => 'catsalad\\V1\\Rest\\Weapon\\WeaponEntity',
            'collection_class' => 'catsalad\\V1\\Rest\\Weapon\\WeaponCollection',
            'service_name' => 'weapon',
        ),
        'catsalad\\V1\\Rest\\Cat_activity\\Controller' => array(
            'listener' => 'catsalad\\V1\\Rest\\Cat_activity\\Cat_activityResource',
            'route_name' => 'catsalad.rest.cat_activity',
            'route_identifier_name' => 'activity_id',
            'collection_name' => 'activity',
            'entity_http_methods' => array(
                0 => 'GET',
            ),
            'collection_http_methods' => array(
                0 => 'GET',
                1 => 'POST',
            ),
            'collection_query_whitelist' => array(
                0 => 'sort',
                1 => 'filter',
            ),
            'page_size' => 25,
            'page_size_param' => 'limit',
            'entity_class' => 'catsalad\\V1\\Rest\\Cat_activity\\Cat_activityEntity',
            'collection_class' => 'catsalad\\V1\\Rest\\Cat_activity\\Cat_activityCollection',
            'service_name' => 'cat_activity',
        ),
        'catsalad\\V1\\Rest\\Toy_device\\Controller' => array(
            'listener' => 'catsalad\\V1\\Rest\\Toy_device\\Toy_deviceResource',
            'route_name' => 'catsalad.rest.toy_device',
            'route_identifier_name' => 'toy_device_id',
            'collection_name' => 'toy_device',
            'entity_http_methods' => array(
                0 => 'GET',
                1 => 'PUT',
            ),
            'collection_http_methods' => array(
                0 => 'GET',
                1 => 'POST',
            ),
            'collection_query_whitelist' => array(),
            'page_size' => 25,
            'page_size_param' => 'limit',
            'entity_class' => 'catsalad\\V1\\Rest\\Toy_device\\Toy_deviceEntity',
            'collection_class' => 'catsalad\\V1\\Rest\\Toy_device\\Toy_deviceCollection',
            'service_name' => 'toy_device',
        ),
        'catsalad\\V1\\Rest\\Social_provider\\Controller' => array(
            'listener' => 'catsalad\\V1\\Rest\\Social_provider\\Social_providerResource',
            'route_name' => 'catsalad.rest.social_provider',
            'route_identifier_name' => 'social_provider_id',
            'collection_name' => 'social_provider',
            'entity_http_methods' => array(),
            'collection_http_methods' => array(),
            'collection_query_whitelist' => array(),
            'page_size' => 25,
            'page_size_param' => null,
            'entity_class' => 'catsalad\\V1\\Rest\\Social_provider\\Social_providerEntity',
            'collection_class' => 'catsalad\\V1\\Rest\\Social_provider\\Social_providerCollection',
            'service_name' => 'social_provider',
        ),
        'catsalad\\V1\\Rest\\Boss\\Controller' => array(
            'listener' => 'catsalad\\V1\\Rest\\Boss\\BossResource',
            'route_name' => 'catsalad.rest.boss',
            'route_identifier_name' => 'boss_id',
            'collection_name' => 'boss',
            'entity_http_methods' => array(
                0 => 'GET',
            ),
            'collection_http_methods' => array(
                0 => 'GET',
            ),
            'collection_query_whitelist' => array(
                0 => 'type',
            ),
            'page_size' => 25,
            'page_size_param' => 'limit',
            'entity_class' => 'catsalad\\V1\\Rest\\Boss\\BossEntity',
            'collection_class' => 'catsalad\\V1\\Rest\\Boss\\BossCollection',
            'service_name' => 'boss',
        ),
        'catsalad\\V1\\Rest\\Attack_pattern\\Controller' => array(
            'listener' => 'catsalad\\V1\\Rest\\Attack_pattern\\Attack_patternResource',
            'route_name' => 'catsalad.rest.attack_pattern',
            'route_identifier_name' => 'attack_pattern_id',
            'collection_name' => 'attack_pattern',
            'entity_http_methods' => array(
                0 => 'GET',
            ),
            'collection_http_methods' => array(
                0 => 'GET',
            ),
            'collection_query_whitelist' => array(),
            'page_size' => 25,
            'page_size_param' => 'limit',
            'entity_class' => 'catsalad\\V1\\Rest\\Attack_pattern\\Attack_patternEntity',
            'collection_class' => 'catsalad\\V1\\Rest\\Attack_pattern\\Attack_patternCollection',
            'service_name' => 'attack_pattern',
        ),
        'catsalad\\V1\\Rest\\Attack_type\\Controller' => array(
            'listener' => 'catsalad\\V1\\Rest\\Attack_type\\Attack_typeResource',
            'route_name' => 'catsalad.rest.attack_type',
            'route_identifier_name' => 'attack_type_id',
            'collection_name' => 'attack_type',
            'entity_http_methods' => array(
                0 => 'GET',
            ),
            'collection_http_methods' => array(
                0 => 'GET',
            ),
            'collection_query_whitelist' => array(),
            'page_size' => 25,
            'page_size_param' => 'limit',
            'entity_class' => 'catsalad\\V1\\Rest\\Attack_type\\Attack_typeEntity',
            'collection_class' => 'catsalad\\V1\\Rest\\Attack_type\\Attack_typeCollection',
            'service_name' => 'attack_type',
        ),
        'catsalad\\V1\\Rest\\Battle\\Controller' => array(
            'listener' => 'catsalad\\V1\\Rest\\Battle\\BattleResource',
            'route_name' => 'catsalad.rest.battle',
            'route_identifier_name' => 'battle_id',
            'collection_name' => 'battle',
            'entity_http_methods' => array(
                0 => 'GET',
            ),
            'collection_http_methods' => array(
                0 => 'GET',
                1 => 'POST',
            ),
            'collection_query_whitelist' => array(
                0 => 'filter',
                1 => 'content_type',
            ),
            'page_size' => 25,
            'page_size_param' => 'limit',
            'entity_class' => 'catsalad\\V1\\Rest\\Battle\\BattleEntity',
            'collection_class' => 'catsalad\\V1\\Rest\\Battle\\BattleCollection',
            'service_name' => 'battle',
        ),
        'catsalad\\V1\\Rest\\Battle_boss\\Controller' => array(
            'listener' => 'catsalad\\V1\\Rest\\Battle_boss\\Battle_bossResource',
            'route_name' => 'catsalad.rest.battle_boss',
            'route_identifier_name' => 'boss_id',
            'collection_name' => 'boss',
            'entity_http_methods' => array(
                0 => 'GET',
            ),
            'collection_http_methods' => array(
                0 => 'GET',
            ),
            'collection_query_whitelist' => array(
                0 => 'content_type',
            ),
            'page_size' => 25,
            'page_size_param' => 'limit',
            'entity_class' => 'catsalad\\V1\\Rest\\Battle_boss\\Battle_bossEntity',
            'collection_class' => 'catsalad\\V1\\Rest\\Battle_boss\\Battle_bossCollection',
            'service_name' => 'battle_boss',
        ),
        'catsalad\\V1\\Rest\\Battle_participant\\Controller' => array(
            'listener' => 'catsalad\\V1\\Rest\\Battle_participant\\Battle_participantResource',
            'route_name' => 'catsalad.rest.battle_participant',
            'route_identifier_name' => 'participant_id',
            'collection_name' => 'participant',
            'entity_http_methods' => array(
                0 => 'GET',
            ),
            'collection_http_methods' => array(
                0 => 'GET',
                1 => 'POST',
            ),
            'collection_query_whitelist' => array(
                0 => 'sort',
            ),
            'page_size' => 25,
            'page_size_param' => 'limit',
            'entity_class' => 'catsalad\\V1\\Rest\\Battle_participant\\Battle_participantEntity',
            'collection_class' => 'catsalad\\V1\\Rest\\Battle_participant\\Battle_participantCollection',
            'service_name' => 'battle_participant',
        ),
        'catsalad\\V1\\Rest\\Battle_activity\\Controller' => array(
            'listener' => 'catsalad\\V1\\Rest\\Battle_activity\\Battle_activityResource',
            'route_name' => 'catsalad.rest.battle_activity',
            'route_identifier_name' => 'activity_id',
            'collection_name' => 'activity',
            'entity_http_methods' => array(
                0 => 'GET',
            ),
            'collection_http_methods' => array(
                0 => 'GET',
                1 => 'POST',
            ),
            'collection_query_whitelist' => array(
                0 => 'filter',
            ),
            'page_size' => 25,
            'page_size_param' => 'limit',
            'entity_class' => 'catsalad\\V1\\Rest\\Battle_activity\\Battle_activityEntity',
            'collection_class' => 'catsalad\\V1\\Rest\\Battle_activity\\Battle_activityCollection',
            'service_name' => 'battle_activity',
        ),
        'catsalad\\V1\\Rest\\Toy_control\\Controller' => array(
            'listener' => 'catsalad\\V1\\Rest\\Toy_control\\Toy_controlResource',
            'route_name' => 'catsalad.rest.toy_control',
            'route_identifier_name' => 'control_id',
            'collection_name' => 'control',
            'entity_http_methods' => array(
                0 => 'GET',
                1 => 'DELETE',
            ),
            'collection_http_methods' => array(
                0 => 'GET',
                1 => 'POST',
                2 => 'DELETE',
            ),
            'collection_query_whitelist' => array(
                0 => 'content_type',
            ),
            'page_size' => 25,
            'page_size_param' => 'limit',
            'entity_class' => 'catsalad\\V1\\Rest\\Toy_control\\Toy_controlEntity',
            'collection_class' => 'catsalad\\V1\\Rest\\Toy_control\\Toy_controlCollection',
            'service_name' => 'toy_control',
        ),
        'catsalad\\V1\\Rest\\Cat_weapon\\Controller' => array(
            'listener' => 'catsalad\\V1\\Rest\\Cat_weapon\\Cat_weaponResource',
            'route_name' => 'catsalad.rest.cat_weapon',
            'route_identifier_name' => 'equipped_weapon_id',
            'collection_name' => 'equipped_weapon',
            'entity_http_methods' => array(
                0 => 'GET',
            ),
            'collection_http_methods' => array(
                0 => 'GET',
                1 => 'POST',
            ),
            'collection_query_whitelist' => array(),
            'page_size' => 25,
            'page_size_param' => 'limit',
            'entity_class' => 'catsalad\\V1\\Rest\\Cat_weapon\\Cat_weaponEntity',
            'collection_class' => 'catsalad\\V1\\Rest\\Cat_weapon\\Cat_weaponCollection',
            'service_name' => 'cat_weapon',
        ),
        'catsalad\\V1\\Rest\\Toydevice_user\\Controller' => array(
            'listener' => 'catsalad\\V1\\Rest\\Toydevice_user\\Toydevice_userResource',
            'route_name' => 'catsalad.rest.toydevice_user',
            'route_identifier_name' => 'user_id',
            'collection_name' => 'user',
            'entity_http_methods' => array(),
            'collection_http_methods' => array(
                0 => 'GET',
            ),
            'collection_query_whitelist' => array(),
            'page_size' => 25,
            'page_size_param' => null,
            'entity_class' => 'catsalad\\V1\\Rest\\Toydevice_user\\Toydevice_userEntity',
            'collection_class' => 'catsalad\\V1\\Rest\\Toydevice_user\\Toydevice_userCollection',
            'service_name' => 'toydevice_user',
        ),
        'catsalad\\V1\\Rest\\LevelTable\\Controller' => array(
            'listener' => 'catsalad\\V1\\Rest\\LevelTable\\LevelTableResource',
            'route_name' => 'catsalad.rest.level-table',
            'route_identifier_name' => 'level_table_id',
            'collection_name' => 'level_table',
            'entity_http_methods' => array(
                0 => 'GET',
            ),
            'collection_http_methods' => array(
                0 => 'GET',
            ),
            'collection_query_whitelist' => array(),
            'page_size' => 25,
            'page_size_param' => 'limit',
            'entity_class' => 'catsalad\\V1\\Rest\\LevelTable\\LevelTableEntity',
            'collection_class' => 'catsalad\\V1\\Rest\\LevelTable\\LevelTableCollection',
            'service_name' => 'level_table',
        ),
        'catsalad\\V1\\Rest\\Server_time\\Controller' => array(
            'listener' => 'catsalad\\V1\\Rest\\Server_time\\Server_timeResource',
            'route_name' => 'catsalad.rest.server_time',
            'route_identifier_name' => 'server_time_id',
            'collection_name' => 'server_time',
            'entity_http_methods' => array(),
            'collection_http_methods' => array(
                0 => 'GET',
            ),
            'collection_query_whitelist' => array(),
            'page_size' => 25,
            'page_size_param' => null,
            'entity_class' => 'catsalad\\V1\\Rest\\Server_time\\Server_timeEntity',
            'collection_class' => 'catsalad\\V1\\Rest\\Server_time\\Server_timeCollection',
            'service_name' => 'server_time',
        ),
        'catsalad\\V1\\Rest\\Attack_pattern_content\\Controller' => array(
            'listener' => 'catsalad\\V1\\Rest\\Attack_pattern_content\\Attack_pattern_contentResource',
            'route_name' => 'catsalad.rest.attack_pattern_content',
            'route_identifier_name' => 'attack_pattern_content_id',
            'collection_name' => 'content',
            'entity_http_methods' => array(
                0 => 'GET',
                1 => 'DELETE',
            ),
            'collection_http_methods' => array(
                0 => 'GET',
                1 => 'POST',
            ),
            'collection_query_whitelist' => array(
                0 => 'content_type',
            ),
            'page_size' => 25,
            'page_size_param' => 'limit',
            'entity_class' => 'catsalad\\V1\\Rest\\Attack_pattern_content\\Attack_pattern_contentEntity',
            'collection_class' => 'catsalad\\V1\\Rest\\Attack_pattern_content\\Attack_pattern_contentCollection',
            'service_name' => 'attack_pattern_content',
        ),
    ),
    'zf-content-negotiation' => array(
        'controllers' => array(
            'catsalad\\V1\\Rest\\User\\Controller' => 'HalJson',
            'catsalad\\V1\\Rest\\Cat\\Controller' => 'HalJson',
            'catsalad\\V1\\Rest\\Weapon\\Controller' => 'HalJson',
            'catsalad\\V1\\Rest\\Cat_activity\\Controller' => 'HalJson',
            'catsalad\\V1\\Rest\\Toy_device\\Controller' => 'HalJson',
            'catsalad\\V1\\Rest\\Social_provider\\Controller' => 'HalJson',
            'catsalad\\V1\\Rest\\Boss\\Controller' => 'HalJson',
            'catsalad\\V1\\Rest\\Attack_pattern\\Controller' => 'HalJson',
            'catsalad\\V1\\Rest\\Attack_type\\Controller' => 'HalJson',
            'catsalad\\V1\\Rest\\Battle\\Controller' => 'HalJson',
            'catsalad\\V1\\Rest\\Battle_boss\\Controller' => 'HalJson',
            'catsalad\\V1\\Rest\\Battle_participant\\Controller' => 'HalJson',
            'catsalad\\V1\\Rest\\Battle_activity\\Controller' => 'HalJson',
            'catsalad\\V1\\Rest\\Toy_control\\Controller' => 'HalJson',
            'catsalad\\V1\\Rest\\Cat_weapon\\Controller' => 'HalJson',
            'catsalad\\V1\\Rest\\Toydevice_user\\Controller' => 'HalJson',
            'catsalad\\V1\\Rest\\LevelTable\\Controller' => 'HalJson',
            'catsalad\\V1\\Rest\\Server_time\\Controller' => 'Json',
            'catsalad\\V1\\Rest\\Attack_pattern_content\\Controller' => 'HalJson',
        ),
        'accept_whitelist' => array(
            'catsalad\\V1\\Rest\\User\\Controller' => array(
                0 => 'application/json',
                1 => 'application/vnd.catsalad.v1+json',
                2 => 'application/hal+json',
            ),
            'catsalad\\V1\\Rest\\Cat\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/hal+json',
                2 => 'application/json',
            ),
            'catsalad\\V1\\Rest\\Weapon\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/hal+json',
                2 => 'application/json',
            ),
            'catsalad\\V1\\Rest\\Cat_activity\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/hal+json',
                2 => 'application/json',
            ),
            'catsalad\\V1\\Rest\\Toy_device\\Controller' => array(
                0 => 'application/json',
                1 => 'application/vnd.catsalad.v1+json',
                2 => 'application/hal+json',
            ),
            'catsalad\\V1\\Rest\\Social_provider\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/hal+json',
                2 => 'application/json',
            ),
            'catsalad\\V1\\Rest\\Boss\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/hal+json',
                2 => 'application/json',
            ),
            'catsalad\\V1\\Rest\\Attack_pattern\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/hal+json',
                2 => 'application/json',
            ),
            'catsalad\\V1\\Rest\\Attack_type\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/hal+json',
                2 => 'application/json',
            ),
            'catsalad\\V1\\Rest\\Battle\\Controller' => array(
                0 => 'application/json',
                1 => 'application/vnd.catsalad.v1+json',
                2 => 'application/hal+json',
            ),
            'catsalad\\V1\\Rest\\Battle_boss\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/hal+json',
                2 => 'application/json',
            ),
            'catsalad\\V1\\Rest\\Battle_participant\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/hal+json',
                2 => 'application/json',
            ),
            'catsalad\\V1\\Rest\\Battle_activity\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/hal+json',
                2 => 'application/json',
            ),
            'catsalad\\V1\\Rest\\Toy_control\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/hal+json',
                2 => 'application/json',
            ),
            'catsalad\\V1\\Rest\\Cat_weapon\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/hal+json',
                2 => 'application/json',
            ),
            'catsalad\\V1\\Rest\\Toydevice_user\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/hal+json',
                2 => 'application/json',
            ),
            'catsalad\\V1\\Rest\\LevelTable\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/hal+json',
                2 => 'application/json',
            ),
            'catsalad\\V1\\Rest\\Server_time\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/hal+json',
                2 => 'application/json',
            ),
            'catsalad\\V1\\Rest\\Attack_pattern_content\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/hal+json',
                2 => 'application/json',
            ),
        ),
        'content_type_whitelist' => array(
            'catsalad\\V1\\Rest\\User\\Controller' => array(
                0 => 'application/json',
                1 => 'application/vnd.catsalad.v1+json',
            ),
            'catsalad\\V1\\Rest\\Cat\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/json',
            ),
            'catsalad\\V1\\Rest\\Weapon\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/json',
            ),
            'catsalad\\V1\\Rest\\Cat_activity\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/json',
            ),
            'catsalad\\V1\\Rest\\Toy_device\\Controller' => array(
                0 => 'application/json',
                1 => 'application/vnd.catsalad.v1+json',
            ),
            'catsalad\\V1\\Rest\\Social_provider\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/json',
            ),
            'catsalad\\V1\\Rest\\Boss\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/json',
            ),
            'catsalad\\V1\\Rest\\Attack_pattern\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/json',
            ),
            'catsalad\\V1\\Rest\\Attack_type\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/json',
            ),
            'catsalad\\V1\\Rest\\Battle\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/json',
            ),
            'catsalad\\V1\\Rest\\Battle_boss\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/json',
            ),
            'catsalad\\V1\\Rest\\Battle_participant\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/json',
            ),
            'catsalad\\V1\\Rest\\Battle_activity\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/json',
            ),
            'catsalad\\V1\\Rest\\Toy_control\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/json',
            ),
            'catsalad\\V1\\Rest\\Cat_weapon\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/json',
            ),
            'catsalad\\V1\\Rest\\Toydevice_user\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/json',
            ),
            'catsalad\\V1\\Rest\\LevelTable\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/json',
            ),
            'catsalad\\V1\\Rest\\Server_time\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/json',
            ),
            'catsalad\\V1\\Rest\\Attack_pattern_content\\Controller' => array(
                0 => 'application/vnd.catsalad.v1+json',
                1 => 'application/json',
            ),
        ),
    ),
    'zf-hal' => array(
        'metadata_map' => array(
            'catsalad\\V1\\Rest\\User\\UserEntity' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.user',
                'route_identifier_name' => 'user_id',
                'hydrator' => 'Zend\\Stdlib\\Hydrator\\ArraySerializable',
            ),
            'catsalad\\V1\\Rest\\User\\UserCollection' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.user',
                'route_identifier_name' => 'user_id',
                'is_collection' => true,
            ),
            'catsalad\\V1\\Rest\\Cat\\CatEntity' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.cat',
                'route_identifier_name' => 'cat_id',
                'hydrator' => 'Zend\\Stdlib\\Hydrator\\ArraySerializable',
            ),
            'catsalad\\V1\\Rest\\Cat\\CatCollection' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.cat',
                'route_identifier_name' => 'cat_id',
                'is_collection' => true,
            ),
            'catsalad\\V1\\Rest\\Weapon\\WeaponEntity' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.weapon',
                'route_identifier_name' => 'weapon_id',
                'hydrator' => 'Zend\\Stdlib\\Hydrator\\ArraySerializable',
            ),
            'catsalad\\V1\\Rest\\Weapon\\WeaponCollection' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.weapon',
                'route_identifier_name' => 'weapon_id',
                'is_collection' => true,
            ),
            'catsalad\\V1\\Rest\\Cat_activity\\Cat_activityEntity' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.cat_activity',
                'route_identifier_name' => 'activity_id',
                'hydrator' => 'Zend\\Stdlib\\Hydrator\\ArraySerializable',
            ),
            'catsalad\\V1\\Rest\\Cat_activity\\Cat_activityCollection' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.cat_activity',
                'route_identifier_name' => 'activity_id',
                'is_collection' => true,
            ),
            'catsalad\\V1\\Rest\\Toy_device\\Toy_deviceEntity' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.toy_device',
                'route_identifier_name' => 'toy_device_id',
                'hydrator' => 'Zend\\Stdlib\\Hydrator\\ArraySerializable',
            ),
            'catsalad\\V1\\Rest\\Toy_device\\Toy_deviceCollection' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.toy_device',
                'route_identifier_name' => 'toy_device_id',
                'is_collection' => true,
            ),
            'catsalad\\V1\\Rest\\Social_provider\\Social_providerEntity' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.social_provider',
                'route_identifier_name' => 'social_provider_id',
                'hydrator' => 'Zend\\Stdlib\\Hydrator\\ArraySerializable',
            ),
            'catsalad\\V1\\Rest\\Social_provider\\Social_providerCollection' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.social_provider',
                'route_identifier_name' => 'social_provider_id',
                'is_collection' => true,
            ),
            'catsalad\\V1\\Rest\\Boss\\BossEntity' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.boss',
                'route_identifier_name' => 'boss_id',
                'hydrator' => 'Zend\\Stdlib\\Hydrator\\ArraySerializable',
            ),
            'catsalad\\V1\\Rest\\Boss\\BossCollection' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.boss',
                'route_identifier_name' => 'boss_id',
                'is_collection' => true,
            ),
            'catsalad\\V1\\Rest\\Attack_pattern\\Attack_patternEntity' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.attack_pattern',
                'route_identifier_name' => 'attack_pattern_id',
                'hydrator' => 'Zend\\Stdlib\\Hydrator\\ArraySerializable',
            ),
            'catsalad\\V1\\Rest\\Attack_pattern\\Attack_patternCollection' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.attack_pattern',
                'route_identifier_name' => 'attack_pattern_id',
                'is_collection' => true,
            ),
            'catsalad\\V1\\Rest\\Attack_type\\Attack_typeEntity' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.attack_type',
                'route_identifier_name' => 'attack_type_id',
                'hydrator' => 'Zend\\Stdlib\\Hydrator\\ArraySerializable',
            ),
            'catsalad\\V1\\Rest\\Attack_type\\Attack_typeCollection' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.attack_type',
                'route_identifier_name' => 'attack_type_id',
                'is_collection' => true,
            ),
            'catsalad\\V1\\Rest\\Battle\\BattleEntity' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.battle',
                'route_identifier_name' => 'battle_id',
                'hydrator' => 'Zend\\Stdlib\\Hydrator\\ArraySerializable',
            ),
            'catsalad\\V1\\Rest\\Battle\\BattleCollection' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.battle',
                'route_identifier_name' => 'battle_id',
                'is_collection' => true,
            ),
            'catsalad\\V1\\Rest\\Battle_boss\\Battle_bossEntity' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.battle_boss',
                'route_identifier_name' => 'boss_id',
                'hydrator' => 'Zend\\Stdlib\\Hydrator\\ArraySerializable',
            ),
            'catsalad\\V1\\Rest\\Battle_boss\\Battle_bossCollection' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.battle_boss',
                'route_identifier_name' => 'boss_id',
                'is_collection' => true,
            ),
            'catsalad\\V1\\Rest\\Battle_participant\\Battle_participantEntity' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.battle_participant',
                'route_identifier_name' => 'participant_id',
                'hydrator' => 'Zend\\Stdlib\\Hydrator\\ArraySerializable',
            ),
            'catsalad\\V1\\Rest\\Battle_participant\\Battle_participantCollection' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.battle_participant',
                'route_identifier_name' => 'participant_id',
                'is_collection' => true,
            ),
            'catsalad\\V1\\Rest\\Battle_activity\\Battle_activityEntity' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.battle_activity',
                'route_identifier_name' => 'activity_id',
                'hydrator' => 'Zend\\Stdlib\\Hydrator\\ArraySerializable',
            ),
            'catsalad\\V1\\Rest\\Battle_activity\\Battle_activityCollection' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.battle_activity',
                'route_identifier_name' => 'activity_id',
                'is_collection' => true,
            ),
            'catsalad\\V1\\Rest\\Toy_control\\Toy_controlEntity' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.toy_control',
                'route_identifier_name' => 'control_id',
                'hydrator' => 'Zend\\Stdlib\\Hydrator\\ArraySerializable',
            ),
            'catsalad\\V1\\Rest\\Toy_control\\Toy_controlCollection' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.toy_control',
                'route_identifier_name' => 'control_id',
                'is_collection' => true,
            ),
            'catsalad\\V1\\Rest\\Cat_weapon\\Cat_weaponEntity' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.cat_weapon',
                'route_identifier_name' => 'equipped_weapon_id',
                'hydrator' => 'Zend\\Stdlib\\Hydrator\\ArraySerializable',
            ),
            'catsalad\\V1\\Rest\\Cat_weapon\\Cat_weaponCollection' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.cat_weapon',
                'route_identifier_name' => 'equipped_weapon_id',
                'is_collection' => true,
            ),
            'catsalad\\V1\\Rest\\Toydevice_user\\Toydevice_userEntity' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.toydevice_user',
                'route_identifier_name' => 'user_id',
                'hydrator' => 'Zend\\Stdlib\\Hydrator\\ArraySerializable',
            ),
            'catsalad\\V1\\Rest\\Toydevice_user\\Toydevice_userCollection' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.toydevice_user',
                'route_identifier_name' => 'user_id',
                'is_collection' => true,
            ),
            'catsalad\\V1\\Rest\\LevelTable\\LevelTableEntity' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.level-table',
                'route_identifier_name' => 'level_table_id',
                'hydrator' => 'Zend\\Stdlib\\Hydrator\\ArraySerializable',
            ),
            'catsalad\\V1\\Rest\\LevelTable\\LevelTableCollection' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.level-table',
                'route_identifier_name' => 'level_table_id',
                'is_collection' => true,
            ),
            'catsalad\\V1\\Rest\\Server_time\\Server_timeEntity' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.server_time',
                'route_identifier_name' => 'server_time_id',
                'hydrator' => 'Zend\\Stdlib\\Hydrator\\ArraySerializable',
            ),
            'catsalad\\V1\\Rest\\Server_time\\Server_timeCollection' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.server_time',
                'route_identifier_name' => 'server_time_id',
                'is_collection' => true,
            ),
            'catsalad\\V1\\Rest\\Attack_pattern_content\\Attack_pattern_contentEntity' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.attack_pattern_content',
                'route_identifier_name' => 'attack_pattern_content_id',
                'hydrator' => 'Zend\\Stdlib\\Hydrator\\ArraySerializable',
            ),
            'catsalad\\V1\\Rest\\Attack_pattern_content\\Attack_pattern_contentCollection' => array(
                'entity_identifier_name' => 'id',
                'route_name' => 'catsalad.rest.attack_pattern_content',
                'route_identifier_name' => 'attack_pattern_content_id',
                'is_collection' => true,
            ),
        ),
    ),
    'zf-apigility' => array(
        'db-connected' => array(
            'catsalad\\V1\\Rest\\LevelTable\\LevelTableResource' => array(
                'adapter_name' => 'cleardb_mysql_db',
                'table_name' => 'level_table',
                'hydrator_name' => 'Zend\\Stdlib\\Hydrator\\ArraySerializable',
                'controller_service_name' => 'catsalad\\V1\\Rest\\LevelTable\\Controller',
                'entity_identifier_name' => 'id',
                'table_service' => 'catsalad\\V1\\Rest\\LevelTable\\LevelTableResource\\Table',
            ),
        ),
    ),
    'zf-content-validation' => array(
        'catsalad\\V1\\Rest\\User\\Controller' => array(
            'input_filter' => 'catsalad\\V1\\Rest\\User\\Validator',
        ),
        'catsalad\\V1\\Rest\\Cat\\Controller' => array(
            'input_filter' => 'catsalad\\V1\\Rest\\Cat\\Validator',
        ),
        'catsalad\\V1\\Rest\\Weapon\\Controller' => array(
            'input_filter' => 'catsalad\\V1\\Rest\\Weapon\\Validator',
        ),
        'catsalad\\V1\\Rest\\Cat_activity\\Controller' => array(
            'input_filter' => 'catsalad\\V1\\Rest\\Cat_activity\\Validator',
        ),
        'catsalad\\V1\\Rest\\Toy_device\\Controller' => array(
            'input_filter' => 'catsalad\\V1\\Rest\\Toy_device\\Validator',
        ),
        'catsalad\\V1\\Rest\\Social_provider\\Controller' => array(
            'input_filter' => 'catsalad\\V1\\Rest\\Social_provider\\Validator',
        ),
        'catsalad\\V1\\Rest\\Boss\\Controller' => array(
            'input_filter' => 'catsalad\\V1\\Rest\\Boss\\Validator',
        ),
        'catsalad\\V1\\Rest\\Attack_pattern\\Controller' => array(
            'input_filter' => 'catsalad\\V1\\Rest\\Attack_pattern\\Validator',
        ),
        'catsalad\\V1\\Rest\\Attack_type\\Controller' => array(
            'input_filter' => 'catsalad\\V1\\Rest\\Attack_type\\Validator',
        ),
        'catsalad\\V1\\Rest\\Battle\\Controller' => array(
            'input_filter' => 'catsalad\\V1\\Rest\\Battle\\Validator',
        ),
        'catsalad\\V1\\Rest\\Battle_boss\\Controller' => array(
            'input_filter' => 'catsalad\\V1\\Rest\\Battle_boss\\Validator',
        ),
        'catsalad\\V1\\Rest\\Battle_participant\\Controller' => array(
            'input_filter' => 'catsalad\\V1\\Rest\\Battle_participant\\Validator',
        ),
        'catsalad\\V1\\Rest\\Battle_activity\\Controller' => array(
            'input_filter' => 'catsalad\\V1\\Rest\\Battle_activity\\Validator',
        ),
        'catsalad\\V1\\Rest\\Toy_control\\Controller' => array(
            'input_filter' => 'catsalad\\V1\\Rest\\Toy_control\\Validator',
        ),
        'catsalad\\V1\\Rest\\Cat_weapon\\Controller' => array(
            'input_filter' => 'catsalad\\V1\\Rest\\Cat_weapon\\Validator',
        ),
        'catsalad\\V1\\Rest\\Toydevice_user\\Controller' => array(
            'input_filter' => 'catsalad\\V1\\Rest\\Toydevice_user\\Validator',
        ),
        'catsalad\\V1\\Rest\\LevelTable\\Controller' => array(
            'input_filter' => 'catsalad\\V1\\Rest\\LevelTable\\Validator',
        ),
        'catsalad\\V1\\Rest\\Server_time\\Controller' => array(
            'input_filter' => 'catsalad\\V1\\Rest\\Server_time\\Validator',
        ),
        'catsalad\\V1\\Rest\\Attack_pattern_content\\Controller' => array(
            'input_filter' => 'catsalad\\V1\\Rest\\Attack_pattern_content\\Validator',
        ),
    ),
    'input_filter_specs' => array(
        'catsalad\\V1\\Rest\\User\\Validator' => array(
            0 => array(
                'name' => 'id',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The identifier of the user.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            1 => array(
                'name' => 'name',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'user name',
                'allow_empty' => false,
                'continue_if_empty' => true,
            ),
            2 => array(
                'name' => 'created_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'the timestamp for the entity is created',
                'allow_empty' => false,
                'continue_if_empty' => true,
            ),
            3 => array(
                'name' => 'updated_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'the timestamp for the entity is updated',
                'allow_empty' => false,
                'continue_if_empty' => true,
            ),
            4 => array(
                'name' => 'device_token',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'allow_empty' => false,
                'continue_if_empty' => true,
                'description' => 'The token for the device.',
            ),
            5 => array(
                'name' => 'access_token',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'allow_empty' => false,
                'continue_if_empty' => false,
                'description' => 'The user access token that is used to access all the APIs.',
            ),
            6 => array(
                'name' => 'toy_device_id',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'allow_empty' => false,
                'continue_if_empty' => false,
                'description' => 'The toy device id.',
            ),
            7 => array(
                'name' => 'social_provider',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The social provider that user uses to login/signup.',
                'continue_if_empty' => false,
                'allow_empty' => false,
            ),
            8 => array(
                'name' => 'social_user_id',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The social user id that is got from the social network service.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            9 => array(
                'name' => 'social_provider_name',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The social provider name. It can be \'facebook\' or \'google\'.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            10 => array(
                'name' => 'toy_device',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The toy device entity.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            11 => array(
                'name' => 'cat',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The cat entity.',
                'continue_if_empty' => true,
                'allow_empty' => false,
            ),
            12 => array(
                'name' => 'location',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The GPS location of the toy_device.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            13 => array(
                'name' => 'cat_name',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The cat name.',
            ),
        ),
        'catsalad\\V1\\Rest\\Cat\\Validator' => array(
            0 => array(
                'name' => 'id',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'Object id of the cat.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            1 => array(
                'name' => 'name',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The name of the cat.',
                'allow_empty' => false,
                'continue_if_empty' => true,
            ),
            2 => array(
                'name' => 'image_url',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The profile image url for the cat.',
                'allow_empty' => false,
                'continue_if_empty' => true,
            ),
            3 => array(
                'name' => 'lvl',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The level of the cat.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            4 => array(
                'name' => 'exp',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The experience value of the cat.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            5 => array(
                'name' => 'score',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The score value of the cat.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            6 => array(
                'name' => 'created_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The created time for the cat.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            7 => array(
                'name' => 'updated_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The latest updated time for the cat.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            8 => array(
                'name' => 'gender',
                'required' => false,
                'filters' => array(),
                'validators' => array(
                    0 => array(
                        'name' => 'catsalad\\V1\\Validator\\Identicals',
                        'options' => array(
                            'token' => array(
                                0 => 'boy',
                                1 => 'girl',
                            ),
                        ),
                    ),
                ),
                'description' => 'The gender of the cat. It\'s \'boy\' or \'girl\'.',
                'allow_empty' => false,
                'continue_if_empty' => true,
            ),
            9 => array(
                'name' => 'location',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The location of the cat position.',
                'continue_if_empty' => false,
                'allow_empty' => false,
            ),
            10 => array(
                'name' => 'equipped_weapon_id',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The equipped weapon id.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
        ),
        'catsalad\\V1\\Rest\\Weapon\\Validator' => array(
            0 => array(
                'name' => 'id',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The object id of the weapon.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            1 => array(
                'name' => 'attack_bonus',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The attack bonus of the weapon.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            2 => array(
                'name' => 'image_url',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The image url of the weapon.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            3 => array(
                'name' => 'created_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'allow_empty' => false,
                'continue_if_empty' => false,
                'description' => 'The create time of the weapon resource.',
            ),
            4 => array(
                'name' => 'updated_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'allow_empty' => false,
                'continue_if_empty' => false,
                'description' => 'The update time of the weapon resource.',
            ),
            5 => array(
                'name' => 'available_level',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'This indicates the weapon is available when over the specified level.',
            ),
        ),
        'catsalad\\V1\\Rest\\Cat_activity\\Validator' => array(
            0 => array(
                'name' => 'id',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The object id of the cat activity.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            1 => array(
                'name' => 'cat_id',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'continue_if_empty' => true,
                'description' => 'The identifier of cat.',
                'allow_empty' => false,
            ),
            2 => array(
                'name' => 'battle_id',
                'required' => true,
                'filters' => array(),
                'validators' => array(),
                'continue_if_empty' => false,
                'description' => 'The identifier of battle. Every activity is occurred in the battle.',
                'allow_empty' => false,
            ),
            3 => array(
                'name' => 'hit_type',
                'required' => true,
                'filters' => array(),
                'validators' => array(
                    0 => array(
                        'name' => 'catsalad\\V1\\Validator\\Identicals',
                        'options' => array(
                            'token' => array(
                                0 => 'hit',
                                1 => 'combo',
                            ),
                        ),
                    ),
                ),
                'continue_if_empty' => false,
                'description' => 'The type of hit. There are two types, such as',
                'allow_empty' => false,
            ),
            4 => array(
                'name' => 'time',
                'required' => true,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The created time of the cat activity.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            5 => array(
                'name' => 'exp',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The experience for the cat activity.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            6 => array(
                'name' => 'score',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The score for the cat activity.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            7 => array(
                'name' => 'created_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The created time of the activity.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
        ),
        'catsalad\\V1\\Rest\\Toy\\Validator' => array(
            0 => array(
                'name' => 'id',
                'required' => true,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The object id of the toy device.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            1 => array(
                'name' => 'type',
                'required' => true,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The type of the toy device.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            2 => array(
                'name' => 'createdAt',
                'required' => true,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The created time of the toy device.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            3 => array(
                'name' => 'updatedAt',
                'required' => true,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The updated time of the toy device.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            4 => array(
                'name' => 'system_recommended_time',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The play time given by system for enabling the toy.',
            ),
            5 => array(
                'name' => 'user_scheduled_time',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The play time given by user for enabling the toy.',
            ),
        ),
        'catsalad\\V1\\Rest\\Toy_device\\Validator' => array(
            0 => array(
                'name' => 'id',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The object id of the toy device.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            1 => array(
                'name' => 'system_recommended_time',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The play time given by system for enabling the toy.',
                'allow_empty' => false,
                'continue_if_empty' => true,
            ),
            2 => array(
                'name' => 'user_scheduled_time',
                'required' => false,
                'filters' => array(),
                'validators' => array(
                    0 => array(
                        'name' => 'Zend\\Validator\\Date',
                        'options' => array(
                            'format' => 'Y-m-d H:i:s',
                        ),
                    ),
                ),
                'description' => 'The play time given by user for enabling the toy.',
                'continue_if_empty' => true,
                'allow_empty' => false,
            ),
            3 => array(
                'name' => 'created_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The created time of the toy device.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            4 => array(
                'name' => 'updated_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The updated time of the toy device.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            5 => array(
                'name' => 'location',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'allow_empty' => false,
                'continue_if_empty' => false,
                'description' => 'The location of the toy device.',
            ),
            6 => array(
                'name' => 'is_use_system_recommended_time',
                'required' => false,
                'filters' => array(),
                'validators' => array(
                    0 => array(
                        'name' => 'catsalad\\V1\\Validator\\BooleanValue',
                        'options' => array(),
                    ),
                ),
                'description' => 'A boolean value to indicate the user uses the system recommended time or user\'s scheduling time.',
                'continue_if_empty' => true,
                'allow_empty' => false,
            ),
            7 => array(
                'name' => 'is_enable_sound',
                'required' => false,
                'filters' => array(),
                'validators' => array(
                    0 => array(
                        'name' => 'catsalad\\V1\\Validator\\BooleanValue',
                        'options' => array(),
                    ),
                ),
                'description' => 'A boolean value to indicate the system sound is enabled or not.',
                'continue_if_empty' => true,
                'allow_empty' => false,
            ),
            8 => array(
                'name' => 'device_id',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The unique device id for user.',
            ),
        ),
        'catsalad\\V1\\Rest\\Social_provider\\Validator' => array(
            0 => array(
                'name' => 'id',
                'required' => true,
                'filters' => array(),
                'validators' => array(),
            ),
            1 => array(
                'name' => 'social_provider_name',
                'required' => true,
                'filters' => array(),
                'validators' => array(),
            ),
            2 => array(
                'name' => 'social_user_id',
                'required' => true,
                'filters' => array(),
                'validators' => array(),
            ),
        ),
        'catsalad\\V1\\Rest\\Boss\\Validator' => array(
            0 => array(
                'name' => 'id',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The identifier of the boss resource.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            1 => array(
                'name' => 'name',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'continue_if_empty' => true,
                'description' => 'The name of the boss.',
                'allow_empty' => false,
            ),
            2 => array(
                'name' => 'hp',
                'required' => false,
                'filters' => array(),
                'validators' => array(
                    0 => array(
                        'name' => 'Zend\\Validator\\Digits',
                        'options' => array(),
                    ),
                ),
                'continue_if_empty' => true,
                'description' => 'The HP of the boss.',
                'allow_empty' => false,
            ),
            3 => array(
                'name' => 'description',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'continue_if_empty' => true,
                'description' => 'The description of the boss.',
                'allow_empty' => false,
            ),
            4 => array(
                'name' => 'attack_pattern',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'continue_if_empty' => true,
                'description' => 'The attack pattern of the boss.',
                'allow_empty' => false,
            ),
            5 => array(
                'name' => 'created_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The create time of the boss.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            6 => array(
                'name' => 'updated_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The update time of the boss.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
        ),
        'catsalad\\V1\\Rest\\Attack_pattern\\Validator' => array(
            0 => array(
                'name' => 'id',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The identifier of the attack-pattern.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            1 => array(
                'name' => 'name',
                'required' => true,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The name of the attack-pattern.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            2 => array(
                'name' => 'attack_type',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The attack types of the attack-pattern.',
                'continue_if_empty' => true,
                'allow_empty' => false,
            ),
            3 => array(
                'name' => 'created_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'Creation time of the attack pattern.',
            ),
            4 => array(
                'name' => 'updated_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'Updating time of the attack pattern.',
            ),
        ),
        'catsalad\\V1\\Rest\\Attack_type\\Validator' => array(
            0 => array(
                'name' => 'id',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The identifier of the attack type.',
            ),
            1 => array(
                'name' => 'name',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The name of the attack type.',
                'continue_if_empty' => true,
            ),
            2 => array(
                'name' => 'created_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The creation time of the attack type.',
            ),
            3 => array(
                'name' => 'updated_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The updated time of the attack type.',
            ),
        ),
        'catsalad\\V1\\Rest\\Active_boss\\Validator' => array(
            0 => array(
                'name' => 'id',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The identifier of the entity of the active boss.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            1 => array(
                'name' => 'boss',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The active boss collection',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            2 => array(
                'name' => 'order',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The order of the active boss.',
            ),
        ),
        'catsalad\\V1\\Rest\\Boss_attacker\\Validator' => array(
            0 => array(
                'name' => 'id',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'allow_empty' => false,
                'continue_if_empty' => false,
                'description' => 'The identifier of the boss attacker entity.',
            ),
            1 => array(
                'name' => 'boss_id',
                'required' => true,
                'filters' => array(),
                'validators' => array(),
                'allow_empty' => false,
                'continue_if_empty' => false,
                'description' => 'The identifier of the boss that is attacked.',
            ),
            2 => array(
                'name' => 'cat_id',
                'required' => true,
                'filters' => array(),
                'validators' => array(),
                'allow_empty' => false,
                'continue_if_empty' => false,
                'description' => 'The identifier of the cat that is attacking the boss.',
            ),
            3 => array(
                'name' => 'created_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'allow_empty' => false,
                'continue_if_empty' => false,
                'description' => 'The time of the entity is created.',
            ),
            4 => array(
                'name' => 'updated_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'allow_empty' => false,
                'continue_if_empty' => false,
                'description' => 'The time of the entity is updated.',
            ),
        ),
        'catsalad\\V1\\Rest\\Battle\\Validator' => array(
            0 => array(
                'name' => 'id',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The identifier of the battle.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            1 => array(
                'name' => 'name',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The battle name',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            2 => array(
                'name' => 'thumb_image_url',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The battle thumbnail image url.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            3 => array(
                'name' => 'fullsize_image_url',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The full-size image url.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            4 => array(
                'name' => 'activated_time',
                'required' => true,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The active time of the battle. User can enter into this battle after this time.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            5 => array(
                'name' => 'created_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The created time of the battle.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            6 => array(
                'name' => 'updated_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The updated time of the battle.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
        ),
        'catsalad\\V1\\Rest\\Battle_boss\\Validator' => array(
            0 => array(
                'name' => 'id',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The identifier of the boss resource.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            1 => array(
                'name' => 'name',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'continue_if_empty' => true,
                'description' => 'The name of the boss.',
                'allow_empty' => false,
            ),
            2 => array(
                'name' => 'hp',
                'required' => false,
                'filters' => array(),
                'validators' => array(
                    0 => array(
                        'name' => 'Zend\\Validator\\Digits',
                        'options' => array(),
                    ),
                ),
                'continue_if_empty' => true,
                'description' => 'The HP of the boss.',
                'allow_empty' => false,
            ),
            3 => array(
                'name' => 'description',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'continue_if_empty' => true,
                'description' => 'The description of the boss.',
                'allow_empty' => false,
            ),
            4 => array(
                'name' => 'attack_pattern',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'continue_if_empty' => true,
                'description' => 'The attack pattern of the boss.',
                'allow_empty' => false,
            ),
            5 => array(
                'name' => 'created_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The create time of the boss.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            6 => array(
                'name' => 'updated_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The update time of the boss.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
        ),
        'catsalad\\V1\\Rest\\Battle_participant\\Validator' => array(
            0 => array(
                'name' => 'id',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'Object id of the cat.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            1 => array(
                'name' => 'name',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The name of the cat.',
                'allow_empty' => false,
                'continue_if_empty' => true,
            ),
            2 => array(
                'name' => 'image_url',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The profile image url for the cat.',
                'allow_empty' => false,
                'continue_if_empty' => true,
            ),
            3 => array(
                'name' => 'lvl',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The level of the cat.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            4 => array(
                'name' => 'exp',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The experience value of the cat.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            5 => array(
                'name' => 'created_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The created time for the cat.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            6 => array(
                'name' => 'updated_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The latest updated time for the cat.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            7 => array(
                'name' => 'gender',
                'required' => false,
                'filters' => array(),
                'validators' => array(
                    0 => array(
                        'name' => 'catsalad\\V1\\Validator\\Identicals',
                        'options' => array(
                            'token' => array(
                                0 => 'boy',
                                1 => 'girl',
                            ),
                        ),
                    ),
                ),
                'description' => 'The gender of the cat. It\'s \'boy\' or \'girl\'.',
                'allow_empty' => false,
                'continue_if_empty' => true,
            ),
            8 => array(
                'name' => 'location',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The location of the cat position.',
                'continue_if_empty' => false,
                'allow_empty' => false,
            ),
            9 => array(
                'name' => 'equipped_weapon_id',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The equipped weapon id.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            10 => array(
                'name' => 'latitude',
                'required' => false,
                'filters' => array(),
                'validators' => array(
                    0 => array(
                        'name' => 'catsalad\\V1\\Validator\\NumericValue',
                        'options' => array(),
                    ),
                ),
                'description' => 'The latitude GPS location of the cat.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            11 => array(
                'name' => 'longitude',
                'required' => false,
                'filters' => array(),
                'validators' => array(
                    0 => array(
                        'name' => 'catsalad\\V1\\Validator\\NumericValue',
                        'options' => array(),
                    ),
                ),
                'description' => 'The longitude GPS location of the cat.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            12 => array(
                'name' => 'score',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The score of the participant.',
            ),
        ),
        'catsalad\\V1\\Rest\\Battle_activity\\Validator' => array(
            0 => array(
                'name' => 'id',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The object id of the cat activity.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            1 => array(
                'name' => 'hit_type',
                'required' => true,
                'filters' => array(),
                'validators' => array(
                    0 => array(
                        'name' => 'catsalad\\V1\\Validator\\Identicals',
                        'options' => array(
                            'token' => array(
                                0 => 'hit',
                                1 => 'combo',
                            ),
                        ),
                    ),
                ),
                'continue_if_empty' => false,
                'description' => 'The type of hit. There are two types, such as',
                'allow_empty' => false,
            ),
            2 => array(
                'name' => 'time',
                'required' => true,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The created time of the cat activity.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            3 => array(
                'name' => 'exp',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The experience for the cat activity.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            4 => array(
                'name' => 'score',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The score for the cat activity.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            5 => array(
                'name' => 'created_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The created time of the activity.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
        ),
        'catsalad\\V1\\Rest\\Toy_control\\Validator' => array(
            0 => array(
                'name' => 'id',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The identifier of the control information.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            1 => array(
                'name' => 'battle_id',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The identifier of the battle.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            2 => array(
                'name' => 'toy_device_id',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The identifier of the toy device.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            3 => array(
                'name' => 'type',
                'required' => false,
                'filters' => array(),
                'validators' => array(
                    0 => array(
                        'name' => 'catsalad\\V1\\Validator\\Identicals',
                        'options' => array(
                            'token' => array(
                                0 => 'counterclockwise',
                                1 => 'clockwise',
                            ),
                        ),
                    ),
                ),
                'description' => 'The type of the control.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            4 => array(
                'name' => 'is_done',
                'required' => false,
                'filters' => array(),
                'validators' => array(
                    0 => array(
                        'name' => 'catsalad\\V1\\Validator\\BooleanValue',
                        'options' => array(),
                    ),
                ),
                'description' => 'The done flag of the control statement.',
                'allow_empty' => false,
                'continue_if_empty' => true,
            ),
            5 => array(
                'name' => 'created_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The created time of this entity.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            6 => array(
                'name' => 'updated_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The updated time of this entity.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
        ),
        'catsalad\\V1\\Rest\\Cat_weapon\\Validator' => array(
            0 => array(
                'name' => 'id',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The object id of the weapon.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            1 => array(
                'name' => 'attack_bonus',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The attack bonus of the weapon.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            2 => array(
                'name' => 'image_url',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The image url of the weapon.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            3 => array(
                'name' => 'created_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'allow_empty' => false,
                'continue_if_empty' => false,
                'description' => 'The create time of the weapon resource.',
            ),
            4 => array(
                'name' => 'updated_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'allow_empty' => false,
                'continue_if_empty' => false,
                'description' => 'The update time of the weapon resource.',
            ),
            5 => array(
                'name' => 'available_level',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'This indicates the weapon is available when over the specified level.',
            ),
        ),
        'catsalad\\V1\\Rest\\Toydevice_user\\Validator' => array(
            0 => array(
                'name' => 'id',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The identifier of the user.',
                'allow_empty' => false,
                'continue_if_empty' => false,
            ),
            1 => array(
                'name' => 'name',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'user name',
                'allow_empty' => false,
                'continue_if_empty' => true,
            ),
            2 => array(
                'name' => 'cat_id',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The cat identifier.',
                'continue_if_empty' => true,
                'allow_empty' => false,
            ),
            3 => array(
                'name' => 'created_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'the timestamp for the entity is created',
                'allow_empty' => false,
                'continue_if_empty' => true,
            ),
            4 => array(
                'name' => 'updated_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'the timestamp for the entity is updated',
                'allow_empty' => false,
                'continue_if_empty' => true,
            ),
        ),
        'catsalad\\V1\\Rest\\LevelTable\\Validator' => array(
            0 => array(
                'name' => 'id',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The identifier of the level.',
            ),
            1 => array(
                'name' => 'level',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The level value.',
            ),
            2 => array(
                'name' => 'exp',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The experience of the level needs.',
            ),
            3 => array(
                'name' => 'next_exp',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The experience of the next level needs.',
            ),
        ),
        'catsalad\\V1\\Rest\\Server_time\\Validator' => array(
            0 => array(
                'name' => 'datetime',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The current time on the server.',
            ),
        ),
        'catsalad\\V1\\Rest\\Attack_pattern_content\\Validator' => array(
            0 => array(
                'name' => 'id',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The identifier of the attack type.',
            ),
            1 => array(
                'name' => 'name',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The name of the attack type.',
                'continue_if_empty' => true,
            ),
            2 => array(
                'name' => 'created_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The creation time of the attack type.',
            ),
            3 => array(
                'name' => 'updated_at',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
                'description' => 'The updated time of the attack type.',
            ),
        ),
    ),
    'service_manager' => array(
        'factories' => array(
            'catsalad\\V1\\Rest\\User\\UserResource' => 'catsalad\\V1\\Rest\\User\\UserResourceFactory',
            'catsalad\\V1\\Rest\\Cat\\CatResource' => 'catsalad\\V1\\Rest\\Cat\\CatResourceFactory',
            'catsalad\\V1\\Rest\\Weapon\\WeaponResource' => 'catsalad\\V1\\Rest\\Weapon\\WeaponResourceFactory',
            'catsalad\\V1\\Rest\\Cat_activity\\Cat_activityResource' => 'catsalad\\V1\\Rest\\Cat_activity\\Cat_activityResourceFactory',
            'catsalad\\V1\\Rest\\Toy_device\\Toy_deviceResource' => 'catsalad\\V1\\Rest\\Toy_device\\Toy_deviceResourceFactory',
            'catsalad\\V1\\Rest\\Social_provider\\Social_providerResource' => 'catsalad\\V1\\Rest\\Social_provider\\Social_providerResourceFactory',
            'catsalad\\V1\\Rest\\Boss\\BossResource' => 'catsalad\\V1\\Rest\\Boss\\BossResourceFactory',
            'catsalad\\V1\\Rest\\Attack_pattern\\Attack_patternResource' => 'catsalad\\V1\\Rest\\Attack_pattern\\Attack_patternResourceFactory',
            'catsalad\\V1\\Rest\\Attack_type\\Attack_typeResource' => 'catsalad\\V1\\Rest\\Attack_type\\Attack_typeResourceFactory',
            'catsalad\\V1\\Rest\\Battle\\BattleResource' => 'catsalad\\V1\\Rest\\Battle\\BattleResourceFactory',
            'catsalad\\V1\\Rest\\Battle_boss\\Battle_bossResource' => 'catsalad\\V1\\Rest\\Battle_boss\\Battle_bossResourceFactory',
            'catsalad\\V1\\Rest\\Battle_participant\\Battle_participantResource' => 'catsalad\\V1\\Rest\\Battle_participant\\Battle_participantResourceFactory',
            'catsalad\\V1\\Rest\\Battle_activity\\Battle_activityResource' => 'catsalad\\V1\\Rest\\Battle_activity\\Battle_activityResourceFactory',
            'catsalad\\V1\\Rest\\Toy_control\\Toy_controlResource' => 'catsalad\\V1\\Rest\\Toy_control\\Toy_controlResourceFactory',
            'catsalad\\V1\\Rest\\Cat_weapon\\Cat_weaponResource' => 'catsalad\\V1\\Rest\\Cat_weapon\\Cat_weaponResourceFactory',
            'catsalad\\V1\\Rest\\Toydevice_user\\Toydevice_userResource' => 'catsalad\\V1\\Rest\\Toydevice_user\\Toydevice_userResourceFactory',
            'catsalad\\V1\\Rest\\Server_time\\Server_timeResource' => 'catsalad\\V1\\Rest\\Server_time\\Server_timeResourceFactory',
            'catsalad\\V1\\Rest\\Attack_pattern_content\\Attack_pattern_contentResource' => 'catsalad\\V1\\Rest\\Attack_pattern_content\\Attack_pattern_contentResourceFactory',
        ),
    ),
    'zf-mvc-auth' => array(
        'authorization' => array(
            'catsalad\\V1\\Rest\\User\\Controller' => array(
                'entity' => array(
                    'GET' => false,
                    'POST' => false,
                    'PATCH' => false,
                    'PUT' => false,
                    'DELETE' => false,
                ),
                'collection' => array(
                    'GET' => false,
                    'POST' => false,
                    'PATCH' => false,
                    'PUT' => false,
                    'DELETE' => false,
                ),
            ),
            'catsalad\\V1\\Rest\\Cat\\Controller' => array(
                'entity' => array(
                    'GET' => false,
                    'POST' => false,
                    'PATCH' => false,
                    'PUT' => false,
                    'DELETE' => false,
                ),
                'collection' => array(
                    'GET' => false,
                    'POST' => false,
                    'PATCH' => false,
                    'PUT' => false,
                    'DELETE' => false,
                ),
            ),
            'catsalad\\V1\\Rest\\Weapon\\Controller' => array(
                'entity' => array(
                    'GET' => false,
                    'POST' => false,
                    'PATCH' => false,
                    'PUT' => false,
                    'DELETE' => false,
                ),
                'collection' => array(
                    'GET' => false,
                    'POST' => false,
                    'PATCH' => false,
                    'PUT' => false,
                    'DELETE' => false,
                ),
            ),
            'catsalad\\V1\\Rest\\Cat_activity\\Controller' => array(
                'entity' => array(
                    'GET' => false,
                    'POST' => false,
                    'PATCH' => false,
                    'PUT' => false,
                    'DELETE' => false,
                ),
                'collection' => array(
                    'GET' => false,
                    'POST' => false,
                    'PATCH' => false,
                    'PUT' => false,
                    'DELETE' => false,
                ),
            ),
            'catsalad\\V1\\Rest\\Toy_device\\Controller' => array(
                'entity' => array(
                    'GET' => false,
                    'POST' => false,
                    'PATCH' => false,
                    'PUT' => false,
                    'DELETE' => false,
                ),
                'collection' => array(
                    'GET' => false,
                    'POST' => false,
                    'PATCH' => false,
                    'PUT' => false,
                    'DELETE' => false,
                ),
            ),
            'catsalad\\V1\\Rest\\Social_provider\\Controller' => array(
                'entity' => array(
                    'GET' => false,
                    'POST' => false,
                    'PATCH' => false,
                    'PUT' => false,
                    'DELETE' => false,
                ),
                'collection' => array(
                    'GET' => false,
                    'POST' => false,
                    'PATCH' => false,
                    'PUT' => false,
                    'DELETE' => false,
                ),
            ),
            'catsalad\\V1\\Rest\\Boss\\Controller' => array(
                'entity' => array(
                    'GET' => false,
                    'POST' => false,
                    'PATCH' => false,
                    'PUT' => false,
                    'DELETE' => false,
                ),
                'collection' => array(
                    'GET' => false,
                    'POST' => false,
                    'PATCH' => false,
                    'PUT' => false,
                    'DELETE' => false,
                ),
            ),
            'catsalad\\V1\\Rest\\Attack_pattern\\Controller' => array(
                'entity' => array(
                    'GET' => false,
                    'POST' => false,
                    'PATCH' => false,
                    'PUT' => false,
                    'DELETE' => false,
                ),
                'collection' => array(
                    'GET' => false,
                    'POST' => false,
                    'PATCH' => false,
                    'PUT' => false,
                    'DELETE' => false,
                ),
            ),
            'catsalad\\V1\\Rest\\Attack_type\\Controller' => array(
                'entity' => array(
                    'GET' => false,
                    'POST' => false,
                    'PATCH' => false,
                    'PUT' => false,
                    'DELETE' => false,
                ),
                'collection' => array(
                    'GET' => false,
                    'POST' => false,
                    'PATCH' => false,
                    'PUT' => false,
                    'DELETE' => false,
                ),
            ),
            'catsalad\\V1\\Rest\\Battle\\Controller' => array(
                'entity' => array(
                    'GET' => false,
                    'POST' => false,
                    'PATCH' => false,
                    'PUT' => false,
                    'DELETE' => false,
                ),
                'collection' => array(
                    'GET' => false,
                    'POST' => false,
                    'PATCH' => false,
                    'PUT' => false,
                    'DELETE' => false,
                ),
            ),
            'catsalad\\V1\\Rest\\Battle_boss\\Controller' => array(
                'entity' => array(
                    'GET' => false,
                    'POST' => false,
                    'PATCH' => false,
                    'PUT' => false,
                    'DELETE' => false,
                ),
                'collection' => array(
                    'GET' => false,
                    'POST' => false,
                    'PATCH' => false,
                    'PUT' => false,
                    'DELETE' => false,
                ),
            ),
            'catsalad\\V1\\Rest\\Battle_participant\\Controller' => array(
                'entity' => array(
                    'GET' => false,
                    'POST' => false,
                    'PATCH' => false,
                    'PUT' => false,
                    'DELETE' => false,
                ),
                'collection' => array(
                    'GET' => false,
                    'POST' => false,
                    'PATCH' => false,
                    'PUT' => false,
                    'DELETE' => false,
                ),
            ),
        ),
    ),
);
